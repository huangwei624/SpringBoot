<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="life.lovestudy.mapper.MenuMapper" >
    <!--
    private int id;
	private String name;    // 当前路由所具备的业务意义，比如说 /per/train 代表着“员工培训”，这里的员工培训就是name值
	private String path;    // 路由地址  /per/train
	private String component;   // 路由所对应的组件名称 PerTrain
	private String iconClz;     // 路由图标的 class 样式 “fa fa-user-circle-o”
	private int parentId;   // 当前路由的父亲路由
	private boolean isEnable;   // 当前路由是否被禁用
	private Meta meta;  //  路由元数据
    -->
    <insert id="saveOne" parameterType="Menu" >
        insert into menu(name, path, component, icon_clz, parent_id, is_enable, keep_alive, require_auth)
        values (#{name}, #{path}, #{component}, #{iconClz}, #{parentId}, #{isEnable}, #{meta.keepAlive}, #{meta.requireAuth})
    </insert>

    <select id="getAllMenu" resultMap="menuMateMap">
        SELECT m1.*, m2.name as parentName
        from menu m1 LEFT JOIN menu m2 on m1.parent_id = m2.id
    </select>

    <select id="getById" resultType="Menu">
        select * from menu where id=#{id}
    </select>

    <select id="getAllMenuByRoleId" resultType="MenuVO">
        select m.id, m.name, m.parent_id
        from role r, role_menu rm, menu m
        where r.id=rm.role_id and rm.menu_id=m.id and r.id=#{roleId};
    </select>

    <select id="getParentMenu" resultType="Menu">
        SELECT m1.id, m1.name
        from menu m1
        where m1.parent_id = 0
    </select>

    <update id="updateMenu" parameterType="Menu">
        update menu
        set name=#{name}, path=#{path}, component=#{component}, icon_clz=#{iconClz}, parent_id=#{parentId}, is_enable=#{isEnable}
                ,keep_alive=#{meta.keepAlive}, require_auth=#{meta.requireAuth}
        where id=#{id}
    </update>

    <delete id="deleteById" >
        delete from menu where id=#{id}
    </delete>

    <!--autoMapping 这个属性可以帮助我们自动映射一些符合规范的属性，不需要我们每个都手动映射了-->
    <resultMap id="menuMateMap" type="MenuVO" autoMapping="true">
        <association property="meta">
            <result column="keep_alive" property="keepAlive"></result>
            <result column="require_auth" property="requireAuth"></result>
        </association>
    </resultMap>


</mapper>